# slurm.conf file generated by Juju.
ClusterName={{ cluster_name }}

# active controller
{% if active_controller_hostname %}
ControlMachine={{ active_controller_hostname }}
ControlAddr={{ active_controller_ingress_address }}
{% elif active_controller_ingress_address %}
ControlMachine={{ active_controller_ingress_address }}
ControlAddr={{ active_controller_ingress_address }}
{% endif %}

# backup controller
{% if backup_controller_hostname %}
BackupController={{ backup_controller_hostname }}
BackupAddr={{ backup_controller_ingress_address }}
{% elif backup_controller_ingress_address %}
BackupController={{ backup_controller_ingress_address }}
BackupAddr={{ backup_controller_ingress_address }}
{% endif %}

AuthType=auth/munge
AuthInfo="socket={{ munge_socket }}"

CryptoType=crypto/munge

MailProg={{ mail_prog }}

SlurmUser={{ slurm_user }}
SlurmdUser={{ slurm_user }}

SlurmctldPort=6817
SlurmdPort=6818

SlurmctldPidFile={{ slurmctld_pid_file }}
SlurmdPidFile={{ slurmd_pid_file }}

SlurmctldLogFile={{ slurmctld_log_file }}
SlurmdLogFile={{ slurmd_log_file }}

SlurmdSpoolDir={{ slurm_spool_dir }}
StateSaveLocation={{ slurm_state_dir }}

PluginDir={{ slurm_plugin_dir }}

PlugStackConfig={{ slurm_plugstack_conf }}

ProctrackType= {{ proctrack_type }}

RebootProgram="/usr/sbin/reboot --reboot"

# User specified config
{{custom_config}}

{% if elasticsearch_address  %}
# Job completion elasticsearch configuration
JobCompType=jobcomp/elasticsearch
JobCompLoc={{elasticsearch_address}}
JobCompParams=timeout=5
{% endif %}

{% if nhc %}
HealthCheckProgram={{nhc.nhc_bin}}
HealthCheckInterval={{nhc.health_check_interval}}
HealthCheckNodeState={{nhc.health_check_node_state}}
{% endif %}

# SLURMDBD CONFIGURED ON {{ slurmdbd_hostname }}
AccountingStorageType=accounting_storage/slurmdbd
JobAcctGatherType=jobacct_gather/linux
AccountingStorageHost={{ slurmdbd_hostname }}
AccountingStoragePort={{ slurmdbd_port }}
AccountingStoragePass={{ munge_socket }}

# INCLUDE CLUSTER SPECIFIC CONFIGURATION OVERRIDE
#include /etc/slurm/slurm-%c.conf

# GRES type
GresTypes=gpu 

# Enumerate nodes and partitions 
{% for partition in slurmd_info %}
{% for node in partition.inventory %}
NodeName={{node.node_name}} NodeAddr={{node.node_addr}} State={{node.state}} RealMemory={{node.real_memory}} CPUs={{node.cpus}} ThreadsPerCore={{node.threads_per_core}} CoresPerSocket={{node.cores_per_socket}} SocketsPerBoard={{node.sockets_per_board}} {{ "Gres=%s" % node.gres if node.gres else ""}}
{%- endfor %}

PartitionName={{partition.partition.name}} Nodes={% for slurmd in partition.inventory %}{{slurmd.node_name}}{{ "," if not loop.last}}{% endfor %} Default={{ 'YES' if partition.partition.default else 'NO' }} State={{partition.partition.state}} {{partition.partition.config if partition.partition.config else ""}}
{% endfor %}
