version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.2.1
  slack: circleci/slack@3.4.2

workflows:
  lint-build-deploy:
    jobs:
      - lint
      - build-slurm-charms:
          context: aws
          requires:
            - lint
      - deploy-bionic:
          requires:
            - build-slurm-charms
      - deploy-focal:
          requires:
            - build-slurm-charms
      - deploy-centos7:
          requires:
            - build-slurm-charms
jobs:
  lint:
    docker:
      - image: cimg/python:3.8.5

    steps:
      - checkout

      - run:
          name: "Install tox"
          command: |
            pip install tox

      - run:
          name: "Lint charm code"
          command: |
            make lint


  build-slurm-charms:
    executor: aws-cli/default

    docker:
      - image: cimg/python:3.8.5

    steps:
      - checkout

      - aws-cli/setup:
          profile-name: default

      - run:
          name: "Install charmcraft"
          command: |
            pip install charmcraft

      - run:
          name: "clone charms"
          command: |
            git clone git@github.com:omnivector-solutions/slurm-charms.git
            for charm in slurmdbd slurmd slurmctld slurmrestd; do
                rm ./slurm-charms/charm-$charm/requirements.txt
                if [[ $charm == "slurmdbd" ]]; then
                    echo -e "git+https://github.com/omnivector-solutions/slurm-ops-manager.git@$CIRCLE_SHA1 \nops \ngit+https://github.com/omnivector-solutions/interface-mysql.git@master" > ./slurm-charms/charm-$charm/requirements.txt
                else
                    echo -e "git+https://github.com/omnivector-solutions/slurm-ops-manager.git@$CIRCLE_SHA1 \nops" > ./slurm-charms/charm-$charm/requirements.txt
                fi
            done
            cd slurm-charms/ && make charms
            mv slurmctld.charm ../
            mv slurmd.charm ../
            mv slurmdbd.charm ../
            mv slurmrestd.charm ../
            cd ..
      - run:
          name: "Pull juju circleci user creds from s3"
          command: |
            aws s3 cp s3://omnivector-cicd/juju-local/juju-local.tar.gz .
            tar -xzvf juju-local.tar.gz

      - run:
          name: "Pull down the latest slurm snap release from github"
          command: |
              wget https://github.com/omnivector-solutions/snap-slurm/releases/download/20.02/slurm_20.02.1_amd64_classic.snap -O slurm.resource

      - run:
          name: "Install venv and juju-wait"
          command: |
            python3 -m venv venv
            source venv/bin/activate
            pip install juju-wait


      - save_cache:
          name: "Cache the built charms and .local/share/juju for the next workflow."
          key: slurm-charms-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - slurm.resource
            - slurmd.charm
            - slurmdbd.charm
            - slurmctld.charm
            - slurmrestd.charm
            - .local/
            - venv/

  deploy-bionic:
    docker:
      - image: cimg/python:3.8.5 

    environment:
      JUJU_DATA: /home/circleci/project/.local/share/juju

    steps:
      - run:
          name: "Install juju"
          command: |
            sudo apt install software-properties-common -y
            sudo add-apt-repository -yu ppa:juju/stable
            sudo apt-get update
            sudo apt-get install -y juju

      - run:
          name: "Clone slurm-charm-bundles"
          command: |
             git clone https://github.com/omnivector-solutions/slurm-charm-bundles .

      - restore_cache:
          name: "Restore the artifacts"
          key: slurm-charms-{{ .Environment.CIRCLE_SHA1 }}

      - run:
          name: "Add model and nat space"
          command: |
            echo $JUJU_CIRCLECI_USER_PASSWORD | juju login --user circleci
            juju add-model circleci-$CIRCLE_SHA1-bionic
            juju add-space -m circleci-$CIRCLE_SHA1-bionic nat 172.31.80.0/24 172.31.81.0/24 172.31.82.0/24 172.31.83.0/24

      - run:
          name: "Deploy charms on bionic"
          command: |
            echo $JUJU_CIRCLECI_USER_PASSWORD | juju login --user circleci
            make deploy-bionic-bundle-on-aws

      - run:
          name: "Juju Wait"
          command: |
            source venv/bin/activate
            echo $JUJU_CIRCLECI_USER_PASSWORD | juju login --user circleci
            juju-wait

      - run:
          name: "Destroy model"
          command: |
            echo $JUJU_CIRCLECI_USER_PASSWORD | juju login --user circleci
            juju destroy-model --force circleci-$CIRCLE_SHA1-bionic -y


  deploy-focal:
    docker:
      - image: cimg/python:3.8.5 

    environment:
      JUJU_DATA: /home/circleci/project/.local/share/juju

    steps:
      - run:
          name: "Install juju"
          command: |
            sudo apt install software-properties-common -y
            sudo add-apt-repository -yu ppa:juju/stable
            sudo apt-get update
            sudo apt-get install -y juju

      - run:
          name: "Clone slurm-charm-bundles"
          command: |
             git clone https://github.com/omnivector-solutions/slurm-charm-bundles .

      - restore_cache:
          name: "Restore the artifacts"
          key: slurm-charms-{{ .Environment.CIRCLE_SHA1 }}

      - run:
          name: "Add model and nat space"
          command: |
            echo $JUJU_CIRCLECI_USER_PASSWORD | juju login --user circleci
            juju add-model circleci-$CIRCLE_SHA1-focal
            juju add-space -m circleci-$CIRCLE_SHA1-focal nat 172.31.80.0/24 172.31.81.0/24 172.31.82.0/24 172.31.83.0/24

      - run:
          name: "Deploy charms on focal"
          command: |
            echo $JUJU_CIRCLECI_USER_PASSWORD | juju login --user circleci
            make deploy-focal-bundle-on-aws

      - run:
          name: "Juju Wait"
          command: |
            source venv/bin/activate
            echo $JUJU_CIRCLECI_USER_PASSWORD | juju login --user circleci
            juju-wait

      - run:
          name: "Destroy model"
          command: |
            echo $JUJU_CIRCLECI_USER_PASSWORD | juju login --user circleci
            juju destroy-model --force circleci-$CIRCLE_SHA1-focal -y


  deploy-centos7:
    docker:
      - image: cimg/python:3.8.5 

    environment:
      JUJU_DATA: /home/circleci/project/.local/share/juju

    steps:
      - run:
          name: "Install juju"
          command: |
            sudo apt install software-properties-common -y
            sudo add-apt-repository -yu ppa:juju/stable
            sudo apt-get update
            sudo apt-get install -y juju

      - run:
          name: "Clone slurm-charm-bundles"
          command: |
             git clone https://github.com/omnivector-solutions/slurm-charm-bundles .

      - restore_cache:
          name: "Restore the artifacts"
          key: slurm-charms-{{ .Environment.CIRCLE_SHA1 }}

      - run:
          name: "Add model and nat space"
          command: |
            echo $JUJU_CIRCLECI_USER_PASSWORD | juju login --user circleci
            juju add-model circleci-$CIRCLE_SHA1-centos7
            juju add-space -m circleci-$CIRCLE_SHA1-centos7 nat 172.31.80.0/24 172.31.81.0/24 172.31.82.0/24 172.31.83.0/24

      - run:
          name: "Deploy charms on centos7"
          command: |
            make deploy-centos7-bundle-on-aws
      - run:
          name: "Wait check status"
          command: |
            sleep 1m
            juju status

      - run:
          name: "Juju Wait"
          command: |
            source venv/bin/activate
            echo $JUJU_CIRCLECI_USER_PASSWORD | juju login --user circleci
            juju-wait

      - run:
          name: "Destroy model"
          command: |
            echo $JUJU_CIRCLECI_USER_PASSWORD | juju login --user circleci
            juju destroy-model --force circleci-$CIRCLE_SHA1-centos7 -y
